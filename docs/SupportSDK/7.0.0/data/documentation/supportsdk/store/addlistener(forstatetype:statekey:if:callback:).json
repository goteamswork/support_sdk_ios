{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"stateKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya","text":"StateKey"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filterBlock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">? = nil, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of the state to listen to. If the state type is not found, the listener will not be notified."}]}]},{"name":"stateKey","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Optional) the state key to listen to. When not passed (or passing nil) the type name from "},{"type":"codeVoice","code":"forStateType"},{"type":"text","text":" will be used."},{"type":"text","text":" "},{"type":"text","text":"Only pass when the state key for the state was changed in the reducer (99% of the times you dont need to set this parameter)"}]}]},{"name":"filterBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"It decides wether the notification for the listener should be sent or not."},{"type":"text","text":" "},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}]}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}]}]}]},{"kind":"content","content":[{"anchor":"Example","level":1,"type":"heading","text":"Example"},{"anchor":"Adding-a-listener","level":2,"type":"heading","text":"Adding a listener"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for a "},{"type":"codeVoice","code":"MyState"},{"type":"text","text":" state type"}]},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(forStateType: MyState.self) { newState in","  \/\/ Do something with the state","}"]},{"anchor":"Adding-a-listener-with-a-filterBlock","level":2,"type":"heading","text":"Adding a listener with a filterBlock"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a listener for a state of "},{"type":"codeVoice","code":"TodoItemsState"},{"type":"text","text":" type with a filter block."},{"type":"text","text":" "},{"type":"text","text":"In the filterBlock we check that the new state has more items than the old state."},{"type":"text","text":" "},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}]},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(","  forStateType: TodoItemsState.self,","  if: { old, new in return old.todos.count > new.todos.count }) { newState in","    \/\/ Do something with the state","}"]},{"anchor":"Adding-a-listener-with-a-state-key","level":2,"type":"heading","text":"Adding a listener with a state key"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a listener for a state of "},{"type":"codeVoice","code":"TodoItemsState"},{"type":"text","text":" type, the reducer registered the state key to “todos”"}]},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(forStateType: TodoItemsState.self, stateKey: \"todos\") { newState in","  \/\/ Do something with the state","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"kind":"symbol","metadata":{"role":"symbol","title":"addListener(forStateType:stateKey:if:callback:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"stateKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF","extendedModule":"SupportSDK","modules":[{"name":"SupportSDK"}]},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/supportsdk\/store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"role":"symbol","title":"FilterFunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"url":"\/documentation\/supportsdk\/filterfunction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/StateKey":{"role":"symbol","title":"StateKey","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateKey"}],"abstract":[{"type":"text","text":"Store state is stored as a Dictionary of [StateKey: Any]"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/StateKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateKey"}],"url":"\/documentation\/supportsdk\/statekey"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(forStateType:stateKey:if:callback:)":{"role":"symbol","title":"addListener(forStateType:stateKey:if:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"forStateType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"stateKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateKey","preciseIdentifier":"s:10SupportSDK8StateKeya"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType","preciseIdentifier":"s:10SupportSDK5StoreC11addListener12forStateType8stateKey2if8callbackAA12SubscriptionVyxGxm_SSSgSbx_xtcSgyxctlF0gH0L_xmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(forStateType:stateKey:if:callback:)","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk\/store\/addlistener(forstatetype:statekey:if:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"role":"symbol","title":"Subscription","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscription"}],"abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"type":"text","text":" "},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"type":"text","text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Subscription"}],"url":"\/documentation\/supportsdk\/subscription"}}}