{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"("},{"kind":"externalParam","text":"if"},{"kind":"text","text":" "},{"kind":"internalParam","text":"filterBlock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona","text":"FilterFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"kind":"text","text":">? = nil, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV","text":"Subscription"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","preciseIdentifier":"s:10SupportSDK5StateV","text":"State"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Listener’s subscription that can be used to remove the notification and for other listener related stuff."}]}]},{"kind":"parameters","parameters":[{"name":"filterBlock","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Optional) block that receives the old state and the new state."},{"type":"text","text":" "},{"type":"text","text":"AnyObjectIt decides wether the notification for the listener should be sent or not."},{"type":"text","text":" "},{"type":"text","text":"When not set, the listener is notified whenever the state changed."}]}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notification block called with the new state when the store’s state changed."}]}]}]},{"kind":"content","content":[{"anchor":"Example","level":1,"type":"heading","text":"Example"},{"anchor":"Adding-a-listener","level":2,"type":"heading","text":"Adding a listener"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a simple listener for the full state."}]},{"type":"codeListing","syntax":null,"code":["let subscription = addListener { newState in","  \/\/ Do something with the state","","  \/\/ Get value of Any? Type with key \"TheKey\"","  let value1 = newState.value(forKey: \"TheKey\")","","  \/\/ Get value of MyState? Type with key \"MyState\" (Key value = the type of the state we want)","  let value2 = newState.value(forKeyOfType: MyState.self)","","  \/\/ Get value of MyState? Type with key \"TheKey\"","  let value3 = newState.value(forKey: \"TheKey\", ofType: MyState.self)","}"]},{"anchor":"Adding-a-listener-with-a-filterBlock","level":2,"type":"heading","text":"Adding a listener with a filterBlock"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding a listener for the full state with a filter block."},{"type":"text","text":" "},{"type":"text","text":"In the filterBlock we check that the new state has more than 10 items."},{"type":"text","text":" "},{"type":"text","text":"The Listener will be notified only if the filterBlock returns true."}]},{"type":"codeListing","syntax":null,"code":["let subscription = store.addListener(if: { oldState, newState in","","  \/\/ Read values from the oldState and the newState","  let old = oldState.value(forKeyOfType: TodoItemsState.self)!","  let new = newState.value(forKeyOfType: TodoItemsState.self)!","","  return new.todos.count > 10","}) { newState in","  \/\/ Do something with the state","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/supportsdk\/store\/addlistener(if:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."},{"type":"text","text":" "},{"type":"text","text":"The listener will be notified with the full state when"}],"kind":"symbol","metadata":{"role":"symbol","title":"addListener(if:callback:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"("},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:10SupportSDK5StoreC11addListener2if8callbackAA12SubscriptionVyAA5StateVGSbAJ_AJtcSg_yAJctF","extendedModule":"SupportSDK","modules":[{"name":"SupportSDK"}]},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store"]]},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/FilterFunction":{"role":"symbol","title":"FilterFunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FilterFunction"}],"abstract":[{"type":"text","text":"Filter function that decides if the listener should be notified or not"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/FilterFunction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FilterFunction"}],"url":"\/documentation\/supportsdk\/filterfunction"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store/addListener(if:callback:)":{"role":"symbol","title":"addListener(if:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addListener"},{"kind":"text","text":"("},{"kind":"externalParam","text":"if"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FilterFunction","preciseIdentifier":"s:10SupportSDK14FilterFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Subscription","preciseIdentifier":"s:10SupportSDK12SubscriptionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10SupportSDK5StateV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Add a listener to the store. The listener will be notified when the state changes."},{"type":"text","text":" "},{"type":"text","text":"The listener will be notified with the full state when"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store\/addListener(if:callback:)","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk\/store\/addlistener(if:callback:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/State":{"role":"symbol","title":"State","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[{"type":"text","text":"Structure that represents the store state. The store state is kept as a "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" with "},{"type":"codeVoice","code":"String"},{"type":"text","text":" Keys and "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" Values ("},{"type":"codeVoice","code":"[String: Any]"},{"type":"text","text":")"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/State","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"State"}],"url":"\/documentation\/supportsdk\/state"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"Store that contains the application state, the reducer logic, the middleware and the listeners"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/supportsdk\/store"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Subscription":{"role":"symbol","title":"Subscription","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Subscription"}],"abstract":[{"type":"text","text":"Subscription structure that represents a listener subscription."},{"type":"text","text":" "},{"type":"text","text":"When adding a listener you get a subscription back."},{"type":"text","text":" "},{"type":"text","text":"You can use this subscription to remove the listener, notify about the current state or link the listener lifecycle with an object."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Subscription","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Subscription"}],"url":"\/documentation\/supportsdk\/subscription"}}}