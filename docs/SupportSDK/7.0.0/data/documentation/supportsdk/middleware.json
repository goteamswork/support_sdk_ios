{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A middleware can be used to implement:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Logging that logs the state before and after the reducer changes it"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Perform async network calls and dispatches actions representing the result when the network returns."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Other advanced usagesâ€¦"}]}]}]},{"anchor":"Example","level":1,"type":"heading","text":"Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implementing a logging middleware."}]},{"type":"codeListing","syntax":null,"code":["class LoggerMiddleware: Middleware {","  var api: MiddlewareAPI?","  var next: DispatchFunction?","","  func onAction(action: Action, getState: @escaping GetStateFunction, dispatch: @escaping DispatchFunction, next: @escaping NextFunction) {","    \/\/ Read the state before any reducer changes it","    print(\"The old state is \\(getState())\")","","    \/\/ Print the action","    print(\"The action is \\(action)\")","","    \/\/ Continue the dispatching process..until the reducer reduces the action","    \/\/ Not calling `next` will prevent the action from reaching the reducer","    next?(action)","","    \/\/ Read the state after any reducer changes it","    print(\"The new state is \\(api?.state)\")","  }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/supportsdk\/middleware"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"title":"Middleware","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:10SupportSDK10MiddlewareP","modules":[{"name":"SupportSDK"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}]},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)"]}],"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK/AsyncMiddleware":{"role":"symbol","title":"AsyncMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncMiddleware"}],"abstract":[{"type":"text","text":"Async Middleware handles actions of type "},{"type":"codeVoice","code":"AsyncAction"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/AsyncMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncMiddleware"}],"url":"\/documentation\/supportsdk\/asyncmiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/BlockMiddleware":{"role":"symbol","title":"BlockMiddleware","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockMiddleware"}],"abstract":[{"type":"text","text":"Create a middleware inline with a block."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/BlockMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BlockMiddleware"}],"url":"\/documentation\/supportsdk\/blockmiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware/onAction(action:getState:dispatch:next:)":{"role":"symbol","title":"onAction(action:getState:dispatch:next:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action","preciseIdentifier":"s:10SupportSDK6ActionP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"getState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GetStateFunction","preciseIdentifier":"s:10SupportSDK16GetStateFunctiona"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dispatch"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchFunction","preciseIdentifier":"s:10SupportSDK16DispatchFunctiona"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NextFunction","preciseIdentifier":"s:10SupportSDK12NextFunctiona"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Function called when an action is dispatched"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware\/onAction(action:getState:dispatch:next:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/supportsdk\/middleware\/onaction(action:getstate:dispatch:next:)"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/LoggerMiddleware":{"role":"symbol","title":"LoggerMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggerMiddleware"}],"abstract":[{"type":"text","text":"LoggerMiddleware that logs the action and state when each action is received"},{"type":"text","text":" "},{"type":"text","text":"When an action is dispatched, the LoggerMiddleware will print information related to it in the console."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/LoggerMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggerMiddleware"}],"url":"\/documentation\/supportsdk\/loggermiddleware"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Middleware":{"role":"symbol","title":"Middleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"abstract":[{"type":"text","text":"Middleware protocol that represents a suas store middleware"},{"type":"text","text":" "},{"type":"text","text":"A middleware helps extending the dispatch logic of Suas."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Middleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"url":"\/documentation\/supportsdk\/middleware"}}}