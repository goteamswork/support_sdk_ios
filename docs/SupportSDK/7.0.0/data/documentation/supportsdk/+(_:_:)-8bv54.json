{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R2"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R2","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC","text":"CombinedReducer"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R1"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","preciseIdentifier":"s:10SupportSDK7ReducerP","text":"Reducer"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","preciseIdentifier":"s:10SupportSDK7ReducerP","text":"Reducer"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"Example","level":1,"type":"heading","text":"Example"},{"anchor":"Combine-reducers","level":2,"type":"heading","text":"Combine reducers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your application has two screens, you can model that with two states, for example "},{"type":"codeVoice","code":"TodoList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Settings"},{"type":"text","text":" states."},{"type":"text","text":" "},{"type":"text","text":"We can then create two reducers for each of these states."}]},{"type":"codeListing","syntax":null,"code":["let todoReducer = BlockReducer(state: TodoList.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let settingsReducer = BlockReducer(state: Settings.self) { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}]},{"type":"codeListing","syntax":null,"code":["let store = Suas.createStore(","  reducer: todoReducer + settingsReducer",")"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"todoReducer"},{"type":"text","text":" will handle the “TodoList” key of state and "},{"type":"codeVoice","code":"settingsReducer"},{"type":"text","text":" will handle the “Settings” portoon of the full Store state"}]},{"anchor":"Combine-reducers-with-custom-state-key","level":2,"type":"heading","text":"Combine reducers with custom state key"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a store has a state with two keys “key1” and “key2”. We can register a reducer for each one of these keys."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We create two reducers with "},{"type":"codeVoice","code":"stateKey"},{"type":"text","text":"s of “key1” and “key2”"}]},{"type":"codeListing","syntax":null,"code":["let myReducer1 = BlockReducer(state: 1, key: \"key1\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}","","let myReducer2 = BlockReducer(state: 1, key: \"key2\") { state, action in","  guard let newState = state as? Int else { return state }","","  if action is SomeAction {","    return newState + 1","  }","","  return newState","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can then combine these 2 reducers with:"}]},{"type":"codeListing","syntax":null,"code":["let store = Suas.createStore(","  reducer: myReducer1 + myReducer2",")"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"myReducer1"},{"type":"text","text":" will handle the “key1” key of state and "},{"type":"codeVoice","code":"myReducer2"},{"type":"text","text":" will handle the “key2” key of state"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/supportsdk\/+(_:_:)-8bv54"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R2","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC"}],"title":"+(_:_:)","roleHeading":"Operator","role":"symbol","symbolKind":"op","externalID":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF","modules":[{"name":"SupportSDK"}]},"hierarchy":{"paths":[["doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK"]]},"references":{"doc://com.zendesk.SupportSDK/documentation/SupportSDK":{"role":"collection","title":"SupportSDK","abstract":[],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/CombinedReducer":{"role":"symbol","title":"CombinedReducer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CombinedReducer"}],"abstract":[{"type":"text","text":"Reducer that represents a combination of two reducers"},{"type":"text","text":" "},{"type":"text","text":"This reducers is not to be implemented by hand. You combine reducer by adding them with the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/CombinedReducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CombinedReducer"}],"url":"\/documentation\/supportsdk\/combinedreducer"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/+(_:_:)-8bv54":{"role":"symbol","title":"+(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"+"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R1","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R1L_xmfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R2","preciseIdentifier":"s:10SupportSDK1poiyAA15CombinedReducerCx_q_tAA0D0RzAaER_r0_lF2R2L_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CombinedReducer","preciseIdentifier":"s:10SupportSDK15CombinedReducerC"}],"abstract":[{"type":"text","text":"Combines two reducers. The combined reducer calls each of its internal reducer for a each paricular state key."}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/+(_:_:)-8bv54","kind":"symbol","type":"topic","url":"\/documentation\/supportsdk\/+(_:_:)-8bv54"},"doc://com.zendesk.SupportSDK/documentation/SupportSDK/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"Protocol that represents a reducer"}],"identifier":"doc:\/\/com.zendesk.SupportSDK\/documentation\/SupportSDK\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/supportsdk\/reducer"}}}